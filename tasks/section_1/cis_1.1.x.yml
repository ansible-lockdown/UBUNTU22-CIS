---

- name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/cramfs.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: install cramfs /bin/true
            create: yes

      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  block:
      - name: "1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/freevxfs.conf
            regexp: "^(#)?install freevxfs(\\s|$)"
            line: install freevxfs /bin/true
            create: yes

      - name: "1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Disable freevxfs"
        modprobe:
            name: freevxfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  block:
      - name: "1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/jffs2.conf
            regexp: "^(#)?install jffs2(\\s|$)"
            line: install jffs2 /bin/true
            create: yes

      - name: "1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Disable jffs2"
        modprobe:
            name: jffs2
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  block:
      - name: "1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfs.conf
            regexp: "^(#)?install hfs(\\s|$)"
            line: install hfs /bin/true
            create: yes

      - name: "1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Disable hfs"
        modprobe:
            name: hfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.4
      - hfs

- name: "1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  block:
      - name: "1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfsplus.conf
            regexp: "^(#)?install hfsplus(\\s|$)"
            line: install hfsplus /bin/true
            create: yes

      - name: "1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Disable hfsplus"
        modprobe:
            name: hfsplus
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/squashfs.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: install squashfs /bin/true
            create: yes

      - name: "1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        modprobe:
            name: squashfs
            state: absent
        ignore_errors: yes
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_6
  tags:
      - level2-server
      - level2-workstation
      - manual
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/udf.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: install udf /bin/true
            create: yes

      - name: "1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Disable udf"
        modprobe:
            name: udf
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_1_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.7
      - udf

- name: |
    "1.1.2 | PATCH | Ensure /tmp is configured"
    "1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
    "1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
    "1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  mount:
      name: "{{ item.device }}"
      src: "{{ item.fstype }}"
      state: present
      fstype: tmpfs
      opts: defaults,{% if ubtu22cis_rule_1_1_3 %}nodev,{% endif %}{% if ubtu22cis_rule_1_1_4 %}nosuid,{% endif %}{% if ubtu22cis_rule_1_1_5 %}noexec{% endif %}
  notify: remount tmp
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - item.mount == "/tmp"
      - ubtu22cis_vartmp['enabled']
      - ubtu22cis_rule_1_1_2 or
        ubtu22cis_rule_1_1_3 or
        ubtu22cis_rule_1_1_4 or
        ubtu22cis_rule_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.2
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5
      - tmp

- name: |
    "1.1.6 | PATCH | Ensure /dev/shm is configured"
    "1.1.7 | PATCH | Ensure nodev option set on /dev/shm partition"
    "1.1.8 | PATCH | Ensure nosuid option set on /dev/shm partition"
    "1.1.9 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: /dev/shm
      state: remounted
      fstype: tmpfs
      opts: "defaults,{% if ubtu22cis_rule_1_1_7 %}nodev,{% endif %}{% if ubtu22cis_rule_1_1_8 %}nosuid,{% endif %}{% if ubtu22cis_rule_1_1_9 %}noexec{% endif %}"
  when:
      - ubtu22cis_rule_1_1_6 or
        ubtu22cis_rule_1_1_7 or
        ubtu22cis_rule_1_1_8 or
        ubtu22cis_rule_1_1_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.6
      - rule_1.1.7
      - rule_1.1.8
      - rule_1.1.9
      - dev_shm

- name: "1.1.10 | AUDIT | Ensure separate partition exists for /var"
  block:
      - name: "1.1.10 | AUDIT | Ensure separate partition exists for /var | Gather /var partition"
        shell: mount | grep "on /var "
        changed_when: false
        failed_when: false
        check_mode: false
        args:
            warn: false
        register: ubtu22cis_1_1_10_var_mounted

      - name: "1.1.10 | AUDIT | Ensure separate partition exists for /var | Warn if /var partition does not exist"
        debug:
            msg:
                - "Warning!! There is no separate partition for /var"
                - "Please create a separate partition for /var"
        when: ubtu22cis_1_1_10_var_mounted.stdout | length == 0

      - name: "1.1.10 | AUDIT | Ensure separate partition exists for /var | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_1.1.10' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: ubtu22cis_1_1_10_var_mounted.stdout | length == 0
  when:
      - ubtu22cis_rule_1_1_10
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - rule_1.1.10
      - var

- name: "1.1.11 | AUDIT | Ensure separate partition exists for /var/tmp"
  block:
      - name: "1.1.11 | AUDIT | Ensure separate partition exists for /var/tmp | Gather /var/tmp partition"
        shell: mount | grep "on /var/tmp "
        changed_when: false
        failed_when: false
        check_mode: false
        args:
            warn: false
        register: ubtu22cis_1_1_11_var_tmp_mounted

      - name: "1.1.11 | AUDIT | Ensure separate partition exists for /var/tmp | Warn if /var/tmp partition does not exist"
        debug:
            msg:
                - "Warning!! There is no separate partition for /var/tmp"
                - "Please create a separate partition for /var/tmp"
        when: ubtu22cis_1_1_11_var_tmp_mounted.stdout | length == 0

      - name: "1.1.11 | AUDIT | Ensure separate partition exists for /var/tmp | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_1.1.11' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: ubtu22cis_1_1_11_var_tmp_mounted.stdout | length == 0
  when:
      - ubtu22cis_rule_1_1_11
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - rule_1.1.11
      - var/tmp

- name: |
    "1.1.12 | PATCH | Ensure /var/tmp partition includes the nodev option"
    "1.1.13 | PATCH | Ensure /var/tmp partition includes the nosuid option"
    "1.1.14 | PATCH | Ensure /var/tmp partition includes the noexec option"
  mount:
      name: /var/tmp
      src: "{{ ubtu22cis_vartmp['source'] }}"
      state: present
      fstype: "{{ ubtu22cis_vartmp['fstype'] }}"
      opts: "{{ ubtu22cis_vartmp['opts'] }}"
  when:
      - ubtu22cis_rule_1_1_12 or
        ubtu22cis_rule_1_1_13 or
        ubtu22cis_rule_1_1_14
      - ubtu22cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.12
      - rule_1.1.13
      - rule_1.1.14
      - var/tmp

- name: "1.1.15 | AUDIT | Ensure separate partition exists for /var/log"
  block:
      - name: "1.1.15 | AUDIT | Ensure separate partition exists for /var/log | Gather /var/log partition"
        shell: mount | grep "on /var/log "
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_1_1_15_var_log_mounted
        args:
            warn: false

      - name: "1.1.15 | AUDIT | Ensure separate partition exists for /var/log | Warn if /var/log partition does not exist"
        debug:
            msg:
                - "Warning!! There is no separate partition for /var/log"
                - "Please create a separate partition for /var/log"
        when: ubtu22cis_1_1_15_var_log_mounted.stdout | length == 0

      - name: "1.1.15 | AUDIT | Ensure separate partition exists for /var/log | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_1.1.15' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: ubtu22cis_1_1_15_var_log_mounted.stdout | length == 0
  when:
      - ubtu22cis_rule_1_1_15
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - rule_1.1.15
      - var/log

- name: "1.1.16 | AUDIT | Ensure separate partition exists for /var/log/audit"
  block:
      - name: "1.1.16 | AUDIT | Ensure separate partition exists for /var/log/audit | Gather /var/log/audit"
        shell: mount | grep "on /var/log/audit "
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_1_1_16_var_log_audit_mounted
        args:
            warn: false

      - name: "1.1.16 | AUDIT | Ensure separate partition exists for /var/log/audit | Warn if /var/log/audit partition does not exist"
        debug:
            msg:
                - "Warning!! There is no separate partition for /var/log/audit"
                - "Please create a separate partition for /var/log/audit"
        when: ubtu22cis_1_1_16_var_log_audit_mounted.stdout | length == 0

      - name: "1.1.16 | AUDIT | Ensure separate partition exists for /var/log/audit | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_1.1.16' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: ubtu22cis_1_1_16_var_log_audit_mounted.stdout | length == 0
  when:
      - ubtu22cis_rule_1_1_16
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - var/log/audit

- name: "1.1.17 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "1.1.17 | AUDIT | Ensure separate partition exists for /home | Gather /home"
        shell: mount | grep "on /home"
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_1_1_17_home_mounted
        args:
            warn: false

      - name: "1.1.17 | AUDIT | Ensure separate partition exists for /home | Warn if /home partition does not exist"
        debug:
            msg:
                - "Warning!! There is no separate partition for /home"
                - "Please create a separate partition for /home"
        when: ubtu22cis_1_1_17_home_mounted.stdout | length == 0

      - name: "1.1.17 | AUDIT | Ensure separate partition exists for /home | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_1.1.17' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: ubtu22cis_1_1_17_home_mounted.stdout | length == 0
  when:
      - ubtu22cis_rule_1_1_17
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - /home

- name: "1.1.18 | PATCH | Ensure /home partition includes the nodev option"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
  with_items: "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - ubtu22cis_rule_1_1_18
      - item.mount == "/home"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.18
      - /home

- name: "1.1.19 | AUDIT | Ensure nodev option set on removable media partitions"
  debug:
      msg: "Not a relevant control"
  when:
      - ubtu22cis_rule_1_1_19
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.19
      - removable_media

- name: "1.1.20 | AUDIT | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "Not a relevant control"
  when:
      - ubtu22cis_rule_1_1_20
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.20
      - removable_media

- name: "1.1.21 | AUDIT | Ensure noexec option set on removable media partitions"
  debug:
      msg: "Not a relevant control"
  when:
      - ubtu22cis_rule_1_1_21
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.1.21
      - removable_media

- name: "1.1.22 | PATCH | Ensure sticky bit is set on all world-writable directories"
  block:
      - name: "1.1.22 | PATCH | Ensure sticky bit is set on all world-writable directories | Find directories"
        shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
        changed_when: false
        failed_when: false
        register: ubtu22cis_1_1_22_status

      - name: "1.1.22 | PATCH | Ensure sticky bit is set on all world-writable directories | set sticky bit"
        file:
            path: "{{ item }}"
            state: directory
            mode: a+t
        with_items:
            - "{{ ubtu22cis_1_1_22_status.stdout_lines }}"
        when: ubtu22cis_1_1_22_status.stdout | length > 0
  when:
      - ubtu22cis_rule_1_1_22
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.22
      - sticky_bit

- name: "1.1.23 | PATCH | Disable Automounting"
  service:
      name: autofs
      state: stopped
      enabled: no
  when:
      - ubtu22cis_rule_1_1_23
      - ubtu22cis_autofs_service_status.stdout == "loaded"
      - not ubtu22cis_allow_autofs
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - rule_1.1.23
      - automounting

- name: "1.1.24 | PATCH | Disable USB Storage"
  block:
      - name: "1.1.24 | PATCH | Disable USB Storage | Set modprobe config"
        lineinfile:
            path: /etc/modprobe.d/usb_storage.conf
            regexp: '^install usb-storage'
            line: 'install usb-storage /bin/true'
            create: yes

      - name: "1.1.24 | PATCH | Disable USB Storage | Remove usb-storage module"
        modprobe:
            name: usb-storage
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu22cis_rule_1_1_24
      - not ubtu22cis_allow_usb_storage
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - rule_1.1.24
      - usb_storage
