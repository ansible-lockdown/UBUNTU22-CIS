---

- name: "1.6.1.1 | PATCH | Ensure AppArmor is installed"
  ansible.builtin.package:
      name: ['apparmor', 'apparmor-utils']
      state: present
  when:
      - ubtu22cis_rule_1_6_1_1
      - "'apparmor' not in ansible_facts.packages or
        'apparmor-utils' not in ansible_facts.packages"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.1
      - apparmor

- name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
  block:
      - name: "1.6.1.2 | AUDIT | Ensure AppArmor is enabled in the bootloader configuration | Get current settings"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_1_6_1_2_cmdline_settings

      - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor {{ ubtu22cis_1_6_1_2_cmdline_settings.stdout }}"'
            insertafter: '^GRUB_'
        when:
            - "'apparmor' not in ubtu22cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' not in ubtu22cis_1_6_1_2_cmdline_settings.stdout"
        notify: Grub update

      - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist | Replace apparmor settings when exists"
        ansible.builtin.replace:
            path: /etc/default/grub
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
        with_items:
            - { regexp: 'apparmor=\S+', replace: 'apparmor=1' }
            - { regexp: 'security=\S+', replace: 'security=apparmor' }
        when:
            - "'apparmor' in ubtu22cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' in ubtu22cis_1_6_1_2_cmdline_settings.stdout"
        notify: Grub update
  when:
      - ubtu22cis_rule_1_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.2
      - apparmor

# Controls 1.6.1.4 and 1.6.1.3 target the same setting and thus should not be run together.
# Because control 1.6.1.4 is stricter than 1.6.1.3, we need to change the order --
# control 1.6.1.4 then registers the fact that is has run and thus keeps 1.6.1.3 from running.

- name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
  block:
      - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing | Make sure that 1.6.1.3 is not run"
        ansible.builtin.set_fact:
          control_1_6_1_4_was_run: true

      - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing | Get pre apply enforce count"
        ansible.builtin.shell: apparmor_status |  grep "profiles are in enforce mode" | tr -d -c 0-9
        changed_when: false
        failed_when: false
        register: ubtu22cis_1_6_1_4_pre_count

      - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing | Apply enforcing to /etc/apparmor.d profiles"
        ansible.builtin.shell: aa-enforce /etc/apparmor.d/*
        changed_when: false
        failed_when: false

      - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing | Get post apply enforce count"
        ansible.builtin.shell: apparmor_status |  grep "profiles are in enforce mode" | tr -d -c 0-9
        changed_when: false
        failed_when: false
        register: ubtu22cis_1_6_1_4_post_count

      - name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing | This flags for idempotency"
        ansible.builtin.debug:
            msg: Changed! The profiles in /etc/apparmor.d were set to enforcing
        changed_when: true
        when: ubtu22cis_1_6_1_4_pre_count.stdout != ubtu22cis_1_6_1_4_post_count.stdout
  when:
      - ubtu22cis_rule_1_6_1_4
      - not ubtu22cis_apparmor_disable
  tags:
      - level2-server
      - level2-workstation
      - automated
      - scored
      - patch
      - rule_1.6.1.4
      - apparmor

- name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
  block:
      - name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Get pre apply enforce count"
        ansible.builtin.shell: apparmor_status |  grep "profiles are in {{ubtu22cis_apparmor_mode}} mode" | tr -d -c 0-9
        changed_when: false
        failed_when: false
        register: ubtu22cis_1_6_1_3_pre_count

      - name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Apply complaining/enforcing to /etc/apparmor.d profiles"
        ansible.builtin.shell: aa-{{ubtu22cis_apparmor_mode}} /etc/apparmor.d/*
        changed_when: false
        failed_when: false

      - name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Get post apply enforce count"
        ansible.builtin.shell: apparmor_status |  grep "profiles are in {{ubtu22cis_apparmor_mode}} mode" | tr -d -c 0-9
        changed_when: false
        failed_when: false
        register: ubtu22cis_1_6_1_3_post_count

      - name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | This flags for idempotency"
        ansible.builtin.debug:
            msg: Changed! The profiles in /etc/apparmor.d were set to {{ubtu22cis_apparmor_mode}} mode
        changed_when: true
        when: ubtu22cis_1_6_1_3_pre_count.stdout != ubtu22cis_1_6_1_3_post_count.stdout
  when:
      - ubtu22cis_rule_1_6_1_3
      - not ubtu22cis_apparmor_disable
      - not control_1_6_1_4_was_run
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.3
      - apparmor

