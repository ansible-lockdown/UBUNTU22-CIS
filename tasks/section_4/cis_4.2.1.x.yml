---

- name: "4.2.1.1 | PATCH | Ensure rsyslog is installed"
  apt:
      name: rsyslog
      state: present
  when:
      - ubtu22cis_rule_4_2_1_1
      - "'rsyslog' not in ansible_facts.packages"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.2.1.1
      - rsyslog
      - apt

- name: "4.2.1.2 | PATCH | Ensure rsyslog Service is enabled"
  service:
      name: rsyslog
      enabled: yes
  when:
      - ubtu22cis_rule_4_2_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.2.1.2
      - rsyslog

- name: "4.2.1.3 | PATCH | Ensure logging is configured"
  block:
      - name: "4.2.1.3 | AUDIT | Ensure logging is configured | Find configuration file"
        shell: grep -r "*.emerg" /etc/* | cut -f1 -d":"
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_4_2_1_3_rsyslog_config_path

      - name: "4.2.1.3 | AUDIT | Ensure logging is configured | Gather rsyslog current config"
        command: "cat {{ ubtu22cis_4_2_1_3_rsyslog_config_path.stdout }}"
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_4_2_1_3_rsyslog_config

      - name: "4.2.1.3 | AUDIT | Ensure logging is configured | Message out config"
        debug:
            msg:
                - "Warning!! Below is the current logging configurations for rsyslog, please review"
                - "{{ ubtu22cis_4_2_1_3_rsyslog_config.stdout_lines }}"
        when: not ubtu22cis_rsyslog_ansible_managed

      - name: "4.2.1.3 | PATCH | Ensure logging is configured | Set warning count"
        set_fact:
            control_number: "{{ control_number }} + [ 'rule_4.2.1.4' ]"
            warn_count: "{{ warn_count | int + 1 }}"
        when: not ubtu22cis_rsyslog_ansible_managed

      - name: "4.2.1.3 | PATCH | Ensure logging is configured | Automated rsyslog configuration"
        lineinfile:
            path: "{{ ubtu22cis_4_2_1_3_rsyslog_config_path.stdout }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^\*.emerg', line: '*.emerg                         :omusrmsg:*', insertafter: '^# Emergencies are sent to everybody logged in' }
            - { regexp: '^auth,authpriv.\*', line: 'auth,authpriv.*                  /var/log/auth.log', insertafter: '^# First some standard log files.  Log by facility' }
            - { regexp: '^mail.\*|^#mail.\*', line: 'mail.*                          -/var/log/mail', insertafter: '^# First some standard log files' }
            - { regexp: '^mail.info|^#mail.info', line: 'mail.info                      -/var/log/mail.info', insertafter: '^# Logging for the mail system' }
            - { regexp: '^mail.warn|^#mail.warn', line: 'mail.warn                      -/var/log/mail.warn', insertafter: '^# Logging for the mail system.' }
            - { regexp: '^mail.err|^#mail.err', line: 'mail.err                        /var/log/mail.err', insertafter: '^# Logging for the mail system.' }
            - { regexp: '^news.crit|^#news.crit', line: 'news.crit                       -/var/log/news/news.crit', insertafter: '^# First some standard log files'}
            - { regexp: '^news.err|^#news.err', line: 'news.err                        -/var/log/news/news.err', insertafter: '^# First some standard log files' }
            - { regexp: '^news.notice|^#news.notice', line: 'news.notice                     -/var/log/news/news.notice', insertafter: '^# First some standard log files' }
            - { regexp: '^\*.=warning;\*.=err|^#\*.=warning;\*.=err', line: '*.=warning;*.=err               -/var/log/warn', insertafter: '^# First some standard log files' }
            - { regexp: '^\*.crit|^#\*.crit', line: '*.crit                           /var/log/warn', insertafter: '^# First some standard log files' }
            - { regexp: '^\*.\*;mail.none;news.none|^#\*.\*;mail.none;news.none', line: '*.*;mail.none;news.none         -/var/log/messages', insertafter: '^# First some standard log files' }
            - { regexp: '^local0,local1.\*|^#local0,local1.\*', line: 'local0,local1.*                 -/var/log/localmessages', insertafter: '^# First some standard log files' }
            - { regexp: '^local2,local3.\*|^#local2,local3.\*', line: 'local2,local3.*                 -/var/log/localmessages', insertafter: '^# First some standard log files' }
            - { regexp: '^local4,local5.\*|^#local4,local5.\*', line: 'local4,local5.*                 -/var/log/localmessages', insertafter: '^# First some standard log files' }
            - { regexp: '^local6,local7.\*|^#local6,local7.\*', line: 'local6,local7.*                 -/var/log/localmessages', insertafter: '^# First some standard log files' }
        loop_control:
            label: "{{ item.line }}"
        notify: restart rsyslog
        when: ubtu22cis_rsyslog_ansible_managed
  when:
      - ubtu22cis_rule_4_2_1_3
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_4.2.1.3
      - rsyslog

- name: "4.2.1.4 | PATCH | Ensure rsyslog default file permissions configured"
  lineinfile:
      path: /etc/rsyslog.conf
      regexp: '^\$FileCreateMode|^#\$FileCreateMode'
      line: '$FileCreateMode 0640'
  notify: restart rsyslog
  when:
      - ubtu22cis_rule_4_2_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.2.1.4
      - rsyslog

- name: "4.2.1.5 | PATCH | Ensure rsyslog is configured to send logs to a remote log host"
  blockinfile:
      path: /etc/rsyslog.conf
      block: |
          ##Enable sending of logs over TCP add the following line:
          *.* @@{{ ubtu22cis_remote_log_server }}
      insertafter: EOF
  when:
      - ubtu22cis_rule_4_2_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.2.1.5
      - rsyslog

- name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts"
  block:
      - name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts | When not a log host"
        replace:
            path: /etc/rsyslog.conf
            regexp: '({{ item }})'
            replace: '#\1'
        with_items:
            - '^(\$ModLoad)'
            - '^(\$InputTCPServerRun)'
        notify: restart rsyslog
        when: not ubtu22cis_system_is_log_server

      - name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts | When a log server"
        lineinfile:
            path: /etc/rsyslog.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        with_items:
            - { regexp: '^\$ModLoad|^#\$ModLoad', line: '$ModLoad imtcp' }
            - { regexp: '^\$InputTCPServerRun|^#\$InputTCPServerRun', line: '$InputTCPServerRun 514' }
        notify: restart rsyslog
        when: ubtu22cis_system_is_log_server
  when:
      - ubtu22cis_rule_4_2_1_6
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_4.2.1.6
      - rsyslog
